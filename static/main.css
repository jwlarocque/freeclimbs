:root {
    --color-major: #fdf5ec;
    --color-minor: #9e9994;
    --color-background: #0f0c09;
    --color-background-two: #29190a;
    --color-hover-background: #ddd6cf;
    --color-greeblies: #83817d;
    --color-sign: #fff;
    --color-delete: #921313;
    --color-delete-hover: #ae2e2e;
    --primary-radius: 20px;
    --secondary-radius: 10px;
    --inset: 5px;
}

h1, h2, h3, h4, h5, h6, h1 a, h2 a, h3 a, h4 a, h5 a, h6 a {
    font-family: "Besley", serif;
    color: var(--color-major);
}

h1 {
    font-weight: bold;
    font-size: min(4em, 10vw);
}

h3 {
    font-size: min(1.8em, 6vw);
}

body {
    background-color: var(--color-background);
    margin: var(--inset);
    background-image: url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 2500 2500' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='1' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' opacity='0.15' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    height: calc(100dvh - 2em);
    overflow: hidden;
}

body > div {
    max-height: 100%;
}

p, a, ul, button, input {
    font-family: "Libre Baskerville", serif;
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

button, .buttonLight, .buttonDark, .buttonDarkInverse, .buttonDelete {
    border: transparent;
    border-radius: var(--primary-radius);
    font-size: 1.0em;
    line-height: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: all 0.1s ease-in-out;
    padding: 0.5em;
}

.buttonLight {
    background-color: transparent;
    color: var(--color-major);
}

.buttonLight:hover {
    color: black;
    background-color: var(--color-hover-background);
}

.buttonDark {
    background-color: transparent;
    color: black;
}

.buttonDark:hover {
    background-color: var(--color-hover-background);
}

.buttonDarkInverse {
    color: var(--color-major);
    background-color: var(--color-background);
}

.buttonDarkInverse:hover {
    background-color: var(--color-background-two);
}

.buttonDelete {
    background-color: var(--color-delete);
    color: var(--color-major);
}

.buttonDelete:hover {
    background-color: var(--color-delete-hover);
}

.buttonDeleteInverse {
    color: var(--color-delete);
    background-color: transparent;
}

.buttonDeleteInverse:hover {
    color: var(--color-major);
    background-color: var(--color-delete-hover);
}

button p, .buttonLight p, .buttonDark p, .buttonDelete p {
    margin: 0;
    padding: 0;
}

.sign {
    background-image: url("data:image/svg+xml;utf8,%3Csvg viewBox='0 0 2500 2500' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='1' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' opacity='0.15' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    background-color: var(--color-background);
    border: 5px solid var(--color-major);
    border-radius: var(--primary-radius);
    padding: 1em;
    box-sizing: border-box;
    box-shadow: 0 0 5px black;
}

.hidden {
    display: none;
}

.modalOverlay {
    background-color: rgba(0, 0, 0, 0.5);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
}

.modalContent {
    width: 90%;
    max-width: 50em;
    max-height: calc(100dvh - 2em);
    overflow-y: auto;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
}

.closeContainer {
    position: absolute;
    top: var(--inset);
    right: var(--inset);
    overflow: visible;
    background-color: transparent;
    padding: 5px;
}

.closeContainer svg {
    width: 15px;
    height: 15px;
    fill: var(--color-major);
    transition: all 0.1s ease-in-out;
}

.closeContainer:hover {
    background-color: var(--color-hover-background);
}

.closeContainer:hover svg {
    fill: black;
}

.disabled {
    pointer-events: none;
}
